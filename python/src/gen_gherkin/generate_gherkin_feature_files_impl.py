"""The AaC Generate Gherkin Feature Files plugin implementation module."""

# NOTE: It is safe to edit this file.
# This file is only initially generated by aac gen-plugin, and it won't be overwritten if the file already exists.

# There may be some unused imports depending on the definition of the plugin, be sure to remove unused imports.
from typing import Any

from aac.context.definition import Definition
from aac.context.language_context import LanguageContext
from aac.context.source_location import SourceLocation
from aac.execute.aac_execution_result import (
    ExecutionResult,
    ExecutionStatus,
    ExecutionMessage,
    MessageLevel,
)
from aac.in_out.files.aac_file import AaCFile

plugin_name = "Generate Gherkin Feature Files"


def gen_gherkin_behaviors(
    architecture_file: str, output_directory: str
) -> ExecutionResult:
    """
     Business logic for allowing gen-gherkin-behaviors command to perform Generate Gherkin feature files from AaC model behavior scenarios.
     Args:
         architecture_file (str): The YAML file containing the data models from which to generate Gherkin feature files.output_directory (str): The directory into which the generated Gherkin feature files will be written.

    Returns:
         The results of the execution of the gen-gherkin-behaviors command.
    """

    # TODO: implement plugin logic here
    status = ExecutionStatus.GENERAL_FAILURE
    messages: list[ExecutionMessage] = []
    error_msg = ExecutionMessage(
        "The gen-gherkin-behaviors command for the Generate Gherkin Feature Files plugin has not been implemented yet.",
        MessageLevel.ERROR,
        None,
        None,
    )
    messages.append(error_msg)

    return ExecutionResult(plugin_name, "gen-gherkin-behaviors", status, messages)
